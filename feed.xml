<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>My Projects</title>
    <link href="https://nsafran.com/feed.xml" rel="self" />
    <link href="https://nsafran.com" />
    <updated>2025-02-06T22:14:22-05:00</updated>
    <author>
        <name>Nathan Safran</name>
    </author>
    <id>https://nsafran.com</id>

    <entry>
        <title>HP UNIX Computers</title>
        <author>
            <name>Nathan Safran</name>
        </author>
        <link href="https://nsafran.com/hp-unix-computers.html"/>
        <id>https://nsafran.com/hp-unix-computers.html</id>
            <category term="Unix"/>
            <category term="HP"/>

        <updated>2025-02-06T22:01:01-05:00</updated>
            <summary>
                <![CDATA[
                    I have 4 HP UNIX machines currently. HP 9000 715/125 HP 9000 rp3440 HP c8000 HP Integrity rx3620
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>I have 4 HP UNIX machines currently.</p>
<ul>
<li>HP 9000 715/125</li>
<li>HP 9000 rp3440</li>
<li><a href="https://nsafran.com/hp-c8000.html">HP c8000</a></li>
<li>HP Integrity rx3620</li>
</ul>
            ]]>
        </content>
    </entry>
    <entry>
        <title>HP c8000</title>
        <author>
            <name>Nathan Safran</name>
        </author>
        <link href="https://nsafran.com/hp-c8000.html"/>
        <id>https://nsafran.com/hp-c8000.html</id>
            <category term="Unix"/>
            <category term="HP"/>

        <updated>2025-02-06T21:56:24-05:00</updated>
            <summary>
                <![CDATA[
                    Overview Installing HP-UX is relatively straight forward (at least compared to IRIX). I installed the TCOE version of HP-UX so I would have graphics. The filename I used was HP-UX 11.11 (2004-12) - TCOE - Core OS, Install and Recovery - DVD.rar. I needed to&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <h1>Overview</h1>
<p> </p>
<p> </p>
<h1>Installing HP-UX 11i v1 (11.11)</h1>
<p>Installing HP-UX is relatively straight forward (at least compared to IRIX). I installed the TCOE version of HP-UX so I would have graphics. The filename I used was <code>HP-UX 11.11 (2004-12) - TCOE - Core OS, Install and Recovery - DVD.rar</code>. I needed to use a dual layer DVD when burning it.</p>
<p>I removed the separate partitions for /usr, /var, etc. and put them all on /. I also made sure the graphics application was selected to be installed, and added a few additional tools I wanted.</p>
<h2>Installing GOLDQPK11i</h2>
<p>Download the ISO from osarchive.org or the tenox archives. The file name is <code>HP-UX 11.11 (2004-12) - Support Plus - Diagnostics and Tested Patch bundles.rar</code><br>I found that the ISO was corrupted and I had to use a specific tool to copy the data out.  I used this command to extract the iso: <!--StartFragment --></p>
<div><code>xorriso -osirrox on -indev ./HP-UX\ 11.11\ \(2004-12\)\ -\ Support\ Plus\ -\ Diagnostics\ and\ Tested\ Patch\ bundles.iso -extract / ./patches</code><!--EndFragment --></div>
<div> </div>
<div>Then, I mounted my nfs server on the HP-UX machine and set the depot path to the GOLDQPK11i directory. All the depots are found, and you can mark them for install.</div>
            ]]>
        </content>
    </entry>
    <entry>
        <title>SGI Altix 350</title>
        <author>
            <name>Nathan Safran</name>
        </author>
        <link href="https://nsafran.com/sgi-altix-350.html"/>
        <id>https://nsafran.com/sgi-altix-350.html</id>
            <category term="Unix"/>
            <category term="Silicon Graphics"/>

        <updated>2025-02-06T22:14:22-05:00</updated>
            <summary></summary>
        <content></content>
    </entry>
    <entry>
        <title>SGI Altix 3700</title>
        <author>
            <name>Nathan Safran</name>
        </author>
        <link href="https://nsafran.com/sgi-altix-3700.html"/>
        <id>https://nsafran.com/sgi-altix-3700.html</id>
            <category term="Unix"/>
            <category term="Silicon Graphics"/>

        <updated>2025-02-04T20:38:53-05:00</updated>
            <summary>
                <![CDATA[
                    TODO
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>TODO</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Soyuz Clock 744H Replica</title>
        <author>
            <name>Nathan Safran</name>
        </author>
        <link href="https://nsafran.com/soyuz-clock-744h-replica.html"/>
        <id>https://nsafran.com/soyuz-clock-744h-replica.html</id>
            <category term="Electronics"/>
            <category term="Arduino"/>

        <updated>2024-04-15T23:34:00-04:00</updated>
            <summary>
                <![CDATA[
                    GitHub Link: https://github.com/nsafran1217/SoyuzClock I created a replica of a Soyuz 744H clock, as seen on the Curious Marc YouTube channel. https://www.curiousmarc.com/space/soyuz-clock-744h-digital I recreated the 3D model made by Gwyllym Suter, since I had some issues modifying the FreeCAD files they provided. My FreeCAD files are&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>GitHub Link: <a href="https://github.com/nsafran1217/SoyuzClock">https://github.com/nsafran1217/SoyuzClock</a> </p>
<p>I created a replica of a Soyuz 744H clock, as seen on the Curious Marc YouTube channel.<br><a href="https://www.curiousmarc.com/space/soyuz-clock-744h-digital">https://www.curiousmarc.com/space/soyuz-clock-744h-digital</a><br><br>I recreated the <a href="https://grabcad.com/library/soyuz-spacecraft-clock-1" target="_blank" rel="noopener noreferrer">3D model made by Gwyllym Suter</a>, since I had some issues modifying the FreeCAD files they provided.</p>
<p>My FreeCAD files are available on the project's GitHub page. (soon, I need to finalize)</p>
<p>I found the part numbers for the switches and displays used in the original hardware. Unfortunately, the buttons are hard to find in the west and expensive, so I designed the case around the cheaper buttons that are smaller than the real ones.</p>
<p>I designed 2 custom boards for this project. One contains the displays and LED drives, and the other has the ESP32, and connections for other peripherals. There are provisions on the board for extra hardware that I did not implement.</p>
<p>The clock has two modes. Currently the clock mode can only be changed on power up, or the default mode can be changed in the wifi settings page<br>"Emulation mode" makes the clock behave like the real thing.<br>"Normal mode" makes the clock act like a normal clock. It retrieves the time from NTP, and displays the date in the stopwatch display. 12 and 24 hour time can be changed in the wifi settings page.</p>
<p> </p>
<h2>Part Numbers</h2>
<ul>
<li dir="auto">АЛС324А is the 7 segment LED display. They are available on eBay or at tubes-store.com. They have the same quality issues as found in the real clock.</li>
<li dir="auto">МТ-1 is the toggle switch. They are available on eBay.</li>
<li dir="auto">ПКн2-1 is the correct push button, however, they are hard to find in the west. I found some stores selling them in Ukraine and Russia, but each switch is at least $15 US, plus you need to convince the seller its worth their time to ship it to you.</li>
<li dir="auto">KM1-1 is the next best option. They are easily found on eBay. The push button is smaller than the real switch. This is what I am using for now.</li>
</ul>
<p> </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>INS-1 Nixie Tube Matrix</title>
        <author>
            <name>Nathan Safran</name>
        </author>
        <link href="https://nsafran.com/ins-1-nixie-tube-matrix.html"/>
        <id>https://nsafran.com/ins-1-nixie-tube-matrix.html</id>
            <category term="Nixie"/>
            <category term="Electronics"/>
            <category term="Arduino"/>

        <updated>2024-04-15T23:13:09-04:00</updated>
            <summary>
                <![CDATA[
                    Code and Board design files: https://github.com/nsafran1217/INS-1_Matrix Project where the board is used: Nixie and VFD Weather Clock This was inspired by the excellent Neon Pixels project I designed my own board because Neon Pixels seems too difficult to build. This board is an 6x10 matrix&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <figure class="post__image"><img loading="lazy"  src="https://nsafran.com/media/posts/37/test-pattern-ins1.gif" alt="" width="600" height="450"></figure>
<p>Code and Board design files: <a href="https://github.com/nsafran1217/INS-1_Matrix">https://github.com/nsafran1217/INS-1_Matrix</a><br>Project where the board is used: <a href="https://nsafran.com/nixie-and-vfd-weather-clock.html">Nixie and VFD Weather Clock</a></p>
<p>This was inspired by the excellent <a href="https://hackaday.io/project/173636-neon-pixels" target="_blank" rel="noopener noreferrer">Neon Pixels project</a><br>I designed my own board because Neon Pixels seems too difficult to build.</p>
<p>This board is an 6x10 matrix of INS-1 (ИНС-1) Nixie tube indicators. I chose 6X10 because I wanted to use the board to display weather icons (a cloud, the sun, rain, etc.). Putting 2 together would give me a 12x10 display, which gave enough pixels to play with and wasn't too physically big. 6x10 also is 60 tubes per board, so we used most of the shift register outputs.</p>
<p>I used HV5530 32-bit high voltage shift registers to control each tube. The HV and 12V supply for the board would be provided on the input connector. I made the displays chainable with a simple 8 pin connector.<br>I wish I was able to make the board smaller, but there was no where to put the chip or route the traces.</p>
<p>This was the first board where I had JLCPCB assemble the boards. They did all the resistors and capacitors, which was well worth the money. Soldering the HV5530 by hand was not too difficult.</p>
<p>I made two big mistakes on this board.</p>
<ol>
<li>I connected Polarity on the HV5530 to GND. POL is active low, so all bits were inverted. I did this because I knew I'd be driving the logic signals through transistors which would invert the signal, but this cause the BLNK pin to light the display when it was true, which removed any possibility of PWM dimming. I ended up disconnecting it from GND and running a bodge wire to 12V. I have fixed this in the KiCAD design files so it is connected to 12V, and the code is setup to account for this.</li>
<li>I put the anode resistors too close to the plated through holes for the tubes. When JLCPCB assembled the board, the solder from the resistors flowed into the holes. I had to suck the solder out of most of the anode holes for the tubes. If I ever build more of these board, I will probably have new ones made. I have not fixed this in the KiCAD files yet.</li>
</ol>
<div class="gallery-wrapper"><div class="gallery"  data-is-empty="false" data-translation="Add images" data-columns="3">
<figure class="gallery__item"><a href="https://nsafran.com/media/posts/37/gallery/20231204_193126.jpg" data-size="1937x1987"><img loading="lazy" src="https://nsafran.com/media/posts/37/gallery/20231204_193126-thumbnail.jpg" alt="" width="720" height="739"></a></figure>
<figure class="gallery__item"><a href="https://nsafran.com/media/posts/37/gallery/20231204_192622.jpg" data-size="1547x3353"><img loading="lazy" src="https://nsafran.com/media/posts/37/gallery/20231204_192622-thumbnail.jpg" alt="" width="720" height="1561"></a></figure>
<figure class="gallery__item"><a href="https://nsafran.com/media/posts/37/gallery/20231204_192517.jpg" data-size="2203x2268"><img loading="lazy" src="https://nsafran.com/media/posts/37/gallery/20231204_192517-thumbnail.jpg" alt="" width="720" height="741"></a></figure>
</div></div>
<h2>Image Design Program</h2>
<p>I made a very sloppy program in c# with winforms to help design the images/animations and generate the arrays for the matrix display.<br>This program allows you to input a custom display size, and number of displays. It makes many assumptions about the display, so its really only usable for this project.<br>It supports saving and loading images and animations from JSON files, scrolling through the animation, deleting frames, specifying the frame time in ms, and properly counts the number of frames in the animates. It provides formatted code that you can paste directly into your Arduino source files. You just need to define the array.</p>
<p>I'm sure there's an easier way to do this, but this is what I came up with.</p>
<figure class="post__image"><img loading="lazy"  src="https://nsafran.com/media/posts/37/matrixdesigner.PNG" sizes="100vw" srcset="https://nsafran.com/media/posts/37/responsive/matrixdesigner-xs.PNG 300w ,https://nsafran.com/media/posts/37/responsive/matrixdesigner-sm.PNG 480w ,https://nsafran.com/media/posts/37/responsive/matrixdesigner-md.PNG 768w ,https://nsafran.com/media/posts/37/responsive/matrixdesigner-lg.PNG 1024w ,https://nsafran.com/media/posts/37/responsive/matrixdesigner-xl.PNG 1360w ,https://nsafran.com/media/posts/37/responsive/matrixdesigner-2xl.PNG 1600w"  alt="" width="1032" height="631"></figure>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Nixie and VFD Weather Clock</title>
        <author>
            <name>Nathan Safran</name>
        </author>
        <link href="https://nsafran.com/nixie-and-vfd-weather-clock.html"/>
        <id>https://nsafran.com/nixie-and-vfd-weather-clock.html</id>
            <category term="VFD"/>
            <category term="Nixie"/>
            <category term="Electronics"/>
            <category term="Arduino"/>

        <updated>2025-02-06T22:14:12-05:00</updated>
            <summary>
                <![CDATA[
                    This project is mostly finished. I still want to modify some of the animations I made, and get a front panel made from aluminum rather than 3D printed. https://github.com/nsafran1217/NixieWeatherClock This clock is powered by an esp32 and features a IN-12 Nixie tube clock, a 12x10&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>This project is mostly finished. I still want to modify some of the animations I made, and get a front panel made from aluminum rather than 3D printed.<br><a href="https://github.com/nsafran1217/NixieWeatherClock">https://github.com/nsafran1217/NixieWeatherClock</a></p>
<figure class="post__image"><img loading="lazy"  src="https://nsafran.com/media/posts/36/20240415_231353.jpg" sizes="100vw" srcset="https://nsafran.com/media/posts/36/responsive/20240415_231353-xs.jpg 300w ,https://nsafran.com/media/posts/36/responsive/20240415_231353-sm.jpg 480w ,https://nsafran.com/media/posts/36/responsive/20240415_231353-md.jpg 768w ,https://nsafran.com/media/posts/36/responsive/20240415_231353-lg.jpg 1024w ,https://nsafran.com/media/posts/36/responsive/20240415_231353-xl.jpg 1360w ,https://nsafran.com/media/posts/36/responsive/20240415_231353-2xl.jpg 1600w"  alt="" width="2079" height="1099"></figure>
<h1>Nixie and VFD Weather clock</h1>
<p>This clock is powered by an esp32 and features a IN-12 Nixie tube clock, a 12x10 INS-1 Neon Indicator matrix, and a 6 character IV-27 VFD display. The clock retrieves the time and weather from the internet at regular intervals and displays current or future weather. The weather display can be set to either future, current, or a rotation of both times. The current weather time frame displayed is indicated by an AL102 LED.</p>
<p>All of the displays including LEDs in this clock are soviet surplus, so I wanted it to look like an old piece of soviet military equipment. All of the front panel lettering and messages displayed on the alphanumeric IV-17 tubes are written in Russian.</p>
<p>This clock uses the three boards I designed, plus one additional board that was hand made.<br><a href="https://github.com/nsafran1217/NixieBoard">Nixie Tube Board</a> - A variation on my <a href="https://nsafran.com/nixie-tube-clock.html">nixie tube clock</a> board that is smaller and takes input on a connector.<br><a href="https://nsafran.com/iv17-vfd-board.html">IV-17  VFD Board</a><br><a href="https://nsafran.com/ins-1-nixie-tube-matrix.html">INS-1 Matrix Board</a><br>All board designs and Arduino libraries are available on GitHub.</p>
<p>For the HV power supply, I use a <a href="https://omnixie.com/products/nch6300hv-nixie-hv-power-module">NCH6300HV</a> by Omnixie. I used their older design in my first Nixie clock and was happy with its performance.</p>
<p>The clock is supplied with 12V from a USB-C connection. A small power trigger board requests 12V from the USB adapter.<br>When the adapter is first plugged in, 5V is sent to the clock. Some voltage makes it through the 7805 that supplies the esp32, but not enough to turn it on. After a few seconds, the voltage increases to 12V and the esp32 starts bringing up the other supplies. I have not seen any issues with this arrangement. </p>
<p>A buck converter generates the 2.4V for the VFD filaments and a boost converter makes the 25V for the anode voltage. 5V for the VFD and nixie board is provided by a linear regulator. This also feeds the 5V input on the esp32.</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Enabling NFSv2 on Ubuntu 22.04</title>
        <author>
            <name>Nathan Safran</name>
        </author>
        <link href="https://nsafran.com/enabling-nfsv2-on-ubuntu-2204.html"/>
        <id>https://nsafran.com/enabling-nfsv2-on-ubuntu-2204.html</id>
            <category term="Unix"/>
            <category term="Digital"/>

        <updated>2024-04-15T23:20:32-04:00</updated>
            <summary>
                <![CDATA[
                    I had issues mounting an NFS export on a Ubuntu 22.04 server on some older OSes like HP-UX and Tru64. I had to enable NFSv2 to allow these systems to mount the NFS export. In /etc/default/nfs-kernel-server, change RPCNFSDOPTS to include version 2, like this:
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>I had issues mounting an NFS export on a Ubuntu 22.04 server on some older OSes like HP-UX and Tru64. I had to enable NFSv2 to allow these systems to mount the NFS export.</p>
<p>In <code>/etc/default/nfs-kernel-server</code>, change <!--StartFragment --><code>RPCNFSDOPTS</code> to include version 2, like this:<br><!--StartFragment --></p>
<div>
<div><code>RPCNFSDOPTS="--nfs-version 2,3,4 --debug --syslog"</code></div>
<!--EndFragment --></div>
<div>Then, in <code>/etc/nfs.conf</code>, in <code>[nfsd]</code>, add <code>vers2=y</code></div>
<div>Then restart nfs: <code><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">sudo systemctl restart nfs-kernel-server</span></code><!--EndFragment --></div>
<div> </div>
<div>I have my directory exported like this:</div>
<div> </div>
<div><!--StartFragment -->
<div><code>/nfs 10.35.0.0/24(rw,no_root_squash,insecure)</code></div>
<!--EndFragment --></div>
<p><!--EndFragment --></p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Digital Alphaserver 1000</title>
        <author>
            <name>Nathan Safran</name>
        </author>
        <link href="https://nsafran.com/digital-alphaserver-1000.html"/>
        <id>https://nsafran.com/digital-alphaserver-1000.html</id>
            <category term="Unix"/>
            <category term="OpenVMS"/>
            <category term="Digital"/>

        <updated>2024-04-15T23:20:38-04:00</updated>
            <summary>
                <![CDATA[
                    Digital Home I was given this machine for free because it had a bad power supply. I took apart the power supply, but didn't see any damage. All I found was a loose screw, so I put it back together and the power supply seems&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p><a href="https://nsafran.com/digital-equipment-corporation.html">Digital Home</a></p>
<p>I was given this machine for free because it had a bad power supply. I took apart the power supply, but didn't see any damage. All I found was a loose screw, so I put it back together and the power supply seems to work fine.</p>
<p>When I first got the machine, I could not enter the ARC firmware console. When I entered "arc" at the SRM console, the console would say "ARC firmware loaded" and freeze. I found a post on <a href="https://www.vogons.org/viewtopic.php?t=89289&amp;p=1093248">vogons</a> that described a similar problem on an alphastation. Doing the same repair on the Dallas DS1287 TOY NVRAM fixed my issue.</p>
<p>I have OpenVMS 8.4, Tru64 5.1B, Windows NT, and Windows 2000 installed on the system.</p>
<p> </p>
<figure class="post__image"><img loading="lazy"  src="https://nsafran.com/media/posts/34/20230306_232957-3.jpg" sizes="100vw" srcset="https://nsafran.com/media/posts/34/responsive/20230306_232957-3-xs.jpg 300w ,https://nsafran.com/media/posts/34/responsive/20230306_232957-3-sm.jpg 480w ,https://nsafran.com/media/posts/34/responsive/20230306_232957-3-md.jpg 768w ,https://nsafran.com/media/posts/34/responsive/20230306_232957-3-lg.jpg 1024w ,https://nsafran.com/media/posts/34/responsive/20230306_232957-3-xl.jpg 1360w ,https://nsafran.com/media/posts/34/responsive/20230306_232957-3-2xl.jpg 1600w"  alt="" width="2091" height="2523"></figure>
            ]]>
        </content>
    </entry>
    <entry>
        <title>IV17 VFD Board</title>
        <author>
            <name>Nathan Safran</name>
        </author>
        <link href="https://nsafran.com/iv17-vfd-board.html"/>
        <id>https://nsafran.com/iv17-vfd-board.html</id>
            <category term="z80"/>
            <category term="VFD"/>
            <category term="Electronics"/>
            <category term="Arduino"/>

        <updated>2024-04-15T23:20:55-04:00</updated>
            <summary>
                <![CDATA[
                    https://github.com/nsafran1217/VFD-IV-17 This board now has a permanent home in my Nixie/VFD Weather clock I finally built a case for this board, though I still don't have a permanent use for it. I 3d printed a case that let me fit the 2 power supplies and&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p><a href="https://github.com/nsafran1217/VFD-IV-17" target="_blank" rel="noopener noreferrer">https://github.com/nsafran1217/VFD-IV-17</a></p>
<p>This board now has a permanent home in my <a href="https://nsafran.com/nixie-and-vfd-weather-clock.html">Nixie/VFD Weather clock</a></p>
<p>I finally built a case for this board, <span style="text-decoration: line-through;">though I still don't have a permanent use for it.</span> I 3d printed a case that let me fit the 2 power supplies and connectors in one place.</p>
<p>I wrote a few assembly routines to use the display with my z80 computer. It uses the z80-pio to talk to it. </p>
<p>The assembly is in the files called "iv17*.s" in my GitHub repo for my computer:<br><a href="https://github.com/nsafran1217/z80-asm/tree/master/myCode/DeviceDemos">https://github.com/nsafran1217/z80-asm/tree/master/myCode/DeviceDemos</a></p>
<p>As a part of this, I also wrote a simple clock program with an RTCDS3231 connected to the z80-pio. I bit-banged the i2c.<br>If anyone is looking for examples of i2c bit banging on the z80, look at i2c.s and RTCDS3231bitBang.s. clock-iv17.s puts it all together into one program.</p>
<div class="gallery-wrapper"><div class="gallery"  data-is-empty="false" data-translation="Add images" data-columns="2">
<figure class="gallery__item"><a href="https://nsafran.com/media/posts/33/gallery/20230621_222751.jpg" data-size="4032x2268"><img loading="lazy" src="https://nsafran.com/media/posts/33/gallery/20230621_222751-thumbnail.jpg" alt="Clock and front view" width="720" height="405"></a>
<figcaption>Clock and front view</figcaption>
</figure>
<figure class="gallery__item"><a href="https://nsafran.com/media/posts/33/gallery/20230623_152055.jpg" data-size="4032x2268"><img loading="lazy" src="https://nsafran.com/media/posts/33/gallery/20230623_152055-thumbnail.jpg" alt="Connectors" width="720" height="405"></a>
<figcaption>Connectors</figcaption>
</figure>
</div></div>
<p> </p>
            ]]>
        </content>
    </entry>
</feed>
